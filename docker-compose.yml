version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gestongo-db
    environment:
      POSTGRES_DB: gestongo
      POSTGRES_USER: gestongo
      POSTGRES_PASSWORD: gestongo_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gestongo"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: gestongo-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # FastAPI Backend
  backend:
    build: .
    container_name: gestongo-backend
    environment:
      - DATABASE_URL=postgresql://gestongo:gestongo_password@postgres:5432/gestongo
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-super-secret-key-change-in-production
      - CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:8080
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/app/backend
      - ./tests:/app/tests
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx (for production)
  nginx:
    image: nginx:alpine
    container_name: gestongo-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/usr/share/nginx/html
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: gestongo-network
