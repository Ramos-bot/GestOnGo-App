name: Publish Docker Images (frontend & backend)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive tags
        id: vars
        run: |
          # Convert repository name to lowercase for GHCR compliance
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          SHA_TAG=sha-${GITHUB_SHA::7}
          
          echo "repo_lower=$REPO_LOWER" >> $GITHUB_OUTPUT
          echo "sha_tag=$SHA_TAG" >> $GITHUB_OUTPUT
          
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "latest=true" >> $GITHUB_OUTPUT
          else
            echo "latest=false" >> $GITHUB_OUTPUT
          fi

      - name: Build & Push FRONTEND (amd64, arm64)
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.vars.outputs.repo_lower }}/frontend:${{ steps.vars.outputs.sha_tag }}
            ${{ steps.vars.outputs.latest == 'true' && format('{0}/{1}/frontend:{2}', env.REGISTRY, steps.vars.outputs.repo_lower, 'latest') || '' }}

      - name: Build & Push BACKEND (amd64, arm64)
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.vars.outputs.repo_lower }}/backend:${{ steps.vars.outputs.sha_tag }}
            ${{ steps.vars.outputs.latest == 'true' && format('{0}/{1}/backend:{2}', env.REGISTRY, steps.vars.outputs.repo_lower, 'latest') || '' }}
